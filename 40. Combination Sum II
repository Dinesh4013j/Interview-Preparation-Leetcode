problem link :https://leetcode.com/problems/combination-sum-ii/description/

class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        res=[]
        d={}
        n=len(candidates) 
        candidates.sort()
        def comb(i,arr,curtarget):
            if curtarget==0:  
                res.append(arr[:])      
            if curtarget<0 or i>=n:
                return 
            for j in range(i,n):
                if j>i and candidates[j]==candidates[j-1]:
                    continue
                if candidates[j]>curtarget:
                    break
                arr.append(candidates[j])
                comb(j+1,arr,curtarget-candidates[j])
                arr.pop()
        comb(0,[],target)
        return res
